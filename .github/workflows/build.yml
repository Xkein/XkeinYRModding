name: build release

on: 
  workflow_dispatch:
    inputs:
      clean_cache:
        description: 'Clean up cache'
        type: boolean
        default: false

env:
  NODEJS_PATH: ${{github.workspace}}/nodejs_bin_22.14.0/nodejs_22
  WWISESDK: ${{github.workspace}}/Wwise2024.1.2.8726_SDK_Win32

jobs:
  build_artifact_release:
    name: Build release artifact
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Cache xmake packages
      id: cache-xmake-pkg
      uses: actions/cache@v4
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        key: cache-xmake-pkg-key-0
        path: |
          ${{github.workspace}}/.xmake-cache-package
          ${{github.workspace}}/.xmake-install-package
          ${{github.workspace}}/nodejs_bin_22.14.0/nodejs_22
          ${{github.workspace}}/Wwise2024.1.2.8726_SDK_Win32
          ${{github.workspace}}/build

    - name: Clean up files
      if: ${{ github.event.inputs.clean_cache == 'true' }} # 检查输入参数
      shell: bash
      run: |
        echo "Cleaning up cache..."
        rm -rf "${{github.workspace}}/.xmake-cache-package"
        rm -rf "${{github.workspace}}/.xmake-install-package"
        rm -rf "${{github.workspace}}/nodejs_bin_22.14.0/nodejs_22"
        rm -rf "${{github.workspace}}/Wwise2024.1.2.8726_SDK_Win32"
        rm -rf "${{github.workspace}}/build"
        echo "Files cleaned up."

    - name: Check if sdks exists
      id: check_sdks
      shell: bash
      run: |
        if [ -d "${{github.workspace}}/nodejs_bin_22.14.0/nodejs_22" ] && [ -d "${{github.workspace}}/Wwise2024.1.2.8726_SDK_Win32" ]; then
          echo "sdks exists."
          echo "sdks_exists=true" >> "$GITHUB_OUTPUT"
        else
          echo "sdks does not exist."
          echo "sdks_exists=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Download nodejs backend
      if: ${{ steps.check_sdks.outputs.sdks_exists == 'false' }}
      uses: robinraju/release-downloader@v1
      with:
        repository: 'Xkein/backend-nodejs'
        tag: 'NodeJS_22.14.0_ssl_114514'
        fileName: 'nodejs_bin_22.14.0.zip'
        extract: true

    - name: Download Wwise SDK
      if: ${{ steps.check_sdks.outputs.sdks_exists == 'false' }}
      uses: robinraju/release-downloader@v1
      with:
        repository: 'Xkein/archives'
        tag: 'Wwise2024.1.2.8726_SDK_Win32'
        fileName: 'Wwise2024.1.2.8726_SDK_Win32.zip'
        extract: true
        out-file-path: Wwise2024.1.2.8726_SDK_Win32

    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1
      with:
        xmake-version: latest
        actions-cache-folder: '.xmake-cache'
        build-cache: true
        build-cache-key: 'xmake-build-key'

    - name: Setup xmake config
      shell: cmd
      run: xmake g --pkg_cachedir=${{github.workspace}}/.xmake-cache-package --pkg_installdir=${{github.workspace}}/.xmake-install-package

    - name: Configure xmake project
      shell: bash
      run: xmake f -p windows -a x86 -y --skip_codegen=n --make_artifacts=y -m release

    - name: Build xmake project
      shell: bash
      run: xmake build -v
      
    - uses: actions/upload-artifact@v4
      with:
        name: release-artifact
        path: build/artifacts/release/**/*
