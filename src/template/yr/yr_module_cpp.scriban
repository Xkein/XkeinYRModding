{{- include 'include/common.scriban'
    init_extra_vars(this)
    include 'yr/yrpp.scriban'
    is_yrpp = module_name == "YRpp"
    func need_codegen(htType)
        ret has_meta(htType.meta) || (is_yrpp && yr_need_codegen(htType))
    end
-}}
#include "{{module_name}}.gen.h"
{{- if module_name == "YrExtCore" }}
#include "yr/yr_all_events.h"
{{- end }}
{{- for klass in module_classes }}
{{- if need_codegen(klass) }}
{{- if get_meta_tag(klass.meta, "HookEvent") }}
__IMPLEMENT_YR_HOOK_EVENT({{klass.cpp_class.name}})
{{- else }}
#include "type/{{klass.cpp_class.name}}.gen.h"
{{- end }}
{{- end; end }}

#include "core/reflection/reflection_register.h"
void {{gen_type_name}}::Register()
{
{{- for klass in module_classes }}
{{- if need_codegen(klass) && !get_meta_tag(klass.meta, "HookEvent") }}
    {{get_gen_type_name(klass.cpp_class.name)}}::Register();
{{- end; end}}
}

void {{gen_type_name}}::Unregister()
{
{{- for klass in module_classes }}
{{- if need_codegen(klass) && !get_meta_tag(klass.meta, "HookEvent") }}
    {{get_gen_type_name(klass.cpp_class.name)}}::Unregister();
{{- end; end}}
}